/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package myFirstWebApp;

import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;
import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static double dailyCalorieDeficit(ArrayList<Double> nutritiveValuesList, String gender, double height,
            double weight, Integer age) {
        double basalMethobolismSpeed = 0;
        // This formula is referenced from the Mifflin-St Jeor Equatian that calculates
        // basal metobolism rate.
        if (gender.equals("male")) {
            basalMethobolismSpeed = 10 * weight + 6.25 * height - 5 * age + 5;
        } else if (gender.equals("female")) {
            basalMethobolismSpeed = 10 * weight + 6.25 * height - 5 * age - 161;
        } else {
            throw new ArithmeticException("Invalid gender");
        }

        return nutritiveValuesList.stream().reduce(0.0, (a, b) -> a + b) - basalMethobolismSpeed;

    }

    public static void main(String[] args) {
        Logger logger = LogManager.getLogger(App.class);
        logger.error("error");
        int port = Integer.parseInt(System.getenv("PORT"));
        port(port);
        get("/", (req, res) -> "Welcome :)");

        post("/compute", (req, res) -> {

            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            java.util.ArrayList<Double> inputList = new java.util.ArrayList<>();
            while (sc1.hasNext()) {
                double value = Double.parseDouble(sc1.next().replaceAll("\\s", ""));
                inputList.add(value);
            }
            sc1.close();
            System.out.println(inputList);

            String input2 = req.queryParams("input2").replaceAll("\\s", "");

            String input3 = req.queryParams("input3").replaceAll("\\s", "");
            double input3AsDouble = Double.parseDouble(input3);

            String input4 = req.queryParams("input4").replaceAll("\\s", "");
            double input4AsDouble = Double.parseDouble(input4);

            String input5 = req.queryParams("input5").replaceAll("\\s", "");
            int input5AsInt = Integer.parseInt(input5);

            double result1 = App.dailyCalorieDeficit(inputList, input2, input3AsDouble, input4AsDouble, input5AsInt);
            // based on bmr
            double result2 = result1 - 370; // based on little exercise
            double result3 = result1 - 770; // based on exercise 2-3 times/week
            double result4 = result1 - 1660; // based on daily intense exercise

            Map<String, Double> map = new HashMap<String, Double>();
            map.put("result1", result1);
            map.put("result2", result2);
            map.put("result3", result3);
            map.put("result4", result4);
            return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());

        get("/compute", (rq, rs) -> {
            Map<String, String> map = new HashMap<String, String>();
            map.put("result1", "not computed yet!");
            map.put("result2", "not computed yet!");
            map.put("result3", "not computed yet!");
            map.put("result4", "not computed yet!");
            return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());
    }

}
