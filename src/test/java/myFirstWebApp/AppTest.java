/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package myFirstWebApp;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.Arrays;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    @Test
    public void GenderTestValid() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        String control1 = "male";
        String control2 = "female";
        try {
            App.dailyCalorieDeficit(list, control1, 180, 90, 20);
            App.dailyCalorieDeficit(list, control2, 180, 90, 20);
        } catch (ArithmeticException e) {
            assertFalse(false);
            return;
        }
        assertTrue(true);
          
    }
    @Test
    public void GenderTestInvalid() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        String control = "-";
        try {
            App.dailyCalorieDeficit(list, control, 180, 90, 20);
        } catch (ArithmeticException e) {
            assertFalse(false);
        }
    }
    
    @Test
    public void calculationTrueForMale() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        if(App.dailyCalorieDeficit(list, "male", 180, 90, 20)==-892.0) 
            assertTrue(true);
        
    }
    @Test
    public void calculationTrueForFemale() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        if(App.dailyCalorieDeficit(list, "female", 180, 90, 20)==-1491.0) 
            assertTrue(true);
        
    } 

    @Test
    public void calculationFalseForMale() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        if(App.dailyCalorieDeficit(list, "male", 180, 90, 20)!=-892.0) 
            assertFalse(false);
        
    }
    @Test
    public void calculationFalseForFemale() {
        ArrayList<Double> list = new ArrayList<>(Arrays.asList(50.0,50.0,50.0,50.0,50.0));
        if(App.dailyCalorieDeficit(list, "female", 180, 90, 20)!=-1491.0) 
            assertFalse(false);
    }

    @Test
    public void testNull() {
        try {
            App.dailyCalorieDeficit(null, "female", 180, 90, 20);
        } catch(NullPointerException e) {
            assertFalse(false);
        }
    }
}
